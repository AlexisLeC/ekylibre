- nature = f.object.nature
- main_title("new_#{nature}".tl) if f.object.new_record?
= field_set do
  = f.input :nature, as: :hidden
  - if nature == :contact
    = f.input :title
    = f.input :first_name
    = f.input :last_name
  - else
    = f.input :last_name, label: Entity.human_attribute_name(:full_name)
  = f.input :active, hide: :dead_at
  -# = f.input :number
  = f.input :prospect
  = f.input :client, show: :client_informations
  = f.input :supplier, show: :supplier_informations
  = f.input :transporter
  = f.custom_fields

= field_set(:details) do # , :collapsed => true
  = f.input :language, :collection => languages, :field => :select, :selected => Preference[:language]
  = f.input :country, :collection => countries, :selected => Preference[:country]
  - if nature == :organization
    = f.input :siret_number
    = f.input :activity_code
    = f.input :vat_number
  = f.input :born_at
  #dead_at= f.input :dead_at
  = f.picture

= field_set(:client_informations) do
  - if nature == :contact
    = f.input :meeting_origin, autocomplete: true
    = f.input :first_met_at
    = f.referenced_association :proposer
  = f.referenced_association :responsible, source: :employees
  = f.input :vat_subjected
  = f.input :reminder_submissive, show: :reduction_percentage
  = f.input :authorized_payments_count
  = f.input :deliveries_conditions, as: :text
  = f.referenced_association :client_account, source: :thirds, :buttons => {:new => {:number => Account.find_or_import_from_nomenclature(:clients).number}}

= field_set(:supplier_informations) do
  = f.referenced_association :supplier_account, source: :thirds, :buttons => {:new => {:number => Account.find_or_import_from_nomenclature(:suppliers).number}}

= field_set(:coordinates, :major => true) do
  = f.nested_association(:emails)
  = f.nested_association(:mails)
  = f.nested_association(:phones)
  = f.nested_association(:mobiles)
  = f.nested_association(:faxes)
  = f.nested_association(:websites)

= f.attachments_field_set
