- item_partial = f.object.nature.to_s + '_item_fields'
= field_set :general_informations do
  = f.input :nature, as: :hidden
  .address-group.delivery-item
    - if f.object.incoming?
      #nature-incoming
        = f.referenced_association :sender, required: true
    - elsif f.object.outgoing?
      #nature-outgoing
        = f.referenced_association :recipient, required: true, input_html: {data: {product_of_delivery_item: {url: backend_entity_path("RECORD_ID", format: :json)}}}
    = f.referenced_association :address, source: :mails, input_html: {data: {"when-item": "address_id", "when-set-value": "RECORD_VALUE"}}
  - if f.object.incoming?
    = f.referenced_association :storage, source: :storage, required: true
  - if f.object.incoming?
    = f.input :separated_stock
  = f.input :with_delivery
  = f.input :delivery_mode, as: :radio_buttons
  #delivery-mode-transporter
    = f.referenced_association :transporter, source: :transporters, new: {transporter: 1}
  -#= f.referenced_association :sale
  = f.input :planned_at, required: false
  - if f.object.outgoing?
    = f.input :remain_owner
  = f.custom_fields
  = f.attachments
  -# = f.object.errors.inspect


= field_set resource_model.human_attribute_name(:items) do
  %table.list
    %thead
      %tr
        %th.act
        %th= ParcelItem.human_attribute_name(:product)
        -# %th= ParcelItem.human_attribute_name(:parted)
        %th= ParcelItem.human_attribute_name(:quantity)
        -# %th= ParcelItem.human_attribute_name(:shape)
        %th= ParcelItem.human_attribute_name(:analysis)

    = f.simple_fields_for :items, resource.items do |item|
      = render item_partial, f: item
    - if f.object.allow_items_update?
      %tfoot#items_anchor
        %tr.total
          %th{colspan: 4}= link_to_add_association :add_item.tl, f, :items,   partial: item_partial, 'data-association-insertion-node' => '#items_anchor', 'data-association-insertion-method' => :before, class: "btn primary"

