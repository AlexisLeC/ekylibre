- main_toolbar do |t|
  - t.edit resource
  - t.destroy(resource, method: :delete, "data-confirm" => :are_you_sure_you_want_to_delete.tl) if resource.destroyable?
  - t.new(params: {controller: :issues, target_id: resource.id, target_type: resource.class.name}, tool: 'new-issue')

= beehive do |b|
  - b.hbox do
    - b.cell :general do
      - if resource.picture.exists?
        .picture= image_tag(resource.picture.url(:identity))
      .big-info.important
        - icon = resource.category.pictogram
        %span.title= Matter.human_attribute_name(:variant)
        %span.value
          %i.picto{class: "picto-#{icon}"}
          = link_to(resource.variant_name, controller: :product_nature_variants, action: :show, id: resource.variant_id)
      - if resource.born_at and resource.age and resource.age >= 1.day
        .big-info
          %span.title= Matter.human_attribute_name(:age)
          %span.value
            %i.picto{class: "picto-clock-o"}
            = human_age(resource.age, display: 2)
    - b.cell :details do
      .big-infos
        .big-info.important
          %span.title= Matter.human_attribute_name(:net_mass)
          %span.value= resource.net_mass.l
      - if ownership = resource.current_ownership and ownership.other?
        .med-info.important
          %span.title= Product.human_attribute_name(:owner)
          %span.value= ownership.owner_full_name
      = attributes_list do |l| # liste des champs à afficher
        - l.attribute :name
        - l.attribute :variety, url: true
        -#l.attribute :group, url: true # on affiche l'attribut name de l'entité ProductGroup associé par l'attribut group de l'entité courante Product avec un lien vers ce groupe
        - l.attribute :born_at
        - l.attribute :dead_at
        - l.attribute :identification_number
        - l.attribute :description

  - b.hbox do
    - b.cell(:variable_indicators) do
      = variable_readings(resource)

    -# b.cell(tl(:x_readings, count: resource.readings.count)) do
      = list(:readings)

  - b.hbox do
    - count = 0
    - map = visualization do |v|
      - v.background "OpenStreetMap.HOT"
      - v.background "OpenStreetMap.Mapnik"
      - v.background "Thunderforest.Landscape"
      - v.background "Esri.WorldImagery"
      - if resource.container
        - shape = resource.container.shape
        - if shape
          - v.serie resource.container.id, [{name: resource.container.name, shape: shape}]
          - v.simple resource.container.name , resource.container.id, fill_color: cycle(theme_colors)
          - count += 1
      - v.control :zoom
      - v.control :scale
      - v.control :fullscreen
      - v.control :layer_selector
    - if count > 0
      - b.cell :container do
        = map

  - b.hbox do
    - b.cell(:interventions) do
      = toolbar do |t|
        - t.new(params: {controller: :interventions})
      = list(:intervention_casts)

  -# b.hbox do
    - b.cell(:groups) do
      = list(:groups)

