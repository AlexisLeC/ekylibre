- activities = Activity.of_campaign(resource)

- main_toolbar do |t|
  -# t.edit resource
  - availables = Activity.availables.where.not(id: activities)
  - if availables.any?

    = t.menu :open, icon: nil do |menu|
      - availables.order(:name).each do |a|
        - menu.item a.name, { action: :open, activity_id: a.id }, method: :post, title: a.name
      - menu.separator
      - menu.item :manage_activities.tl, { controller: :activities, action: :index }, as: 'main'
    - if (@campaign.selected_manure_management_plan).nil?
      - if tmp = ManureManagementPlan.check_makable(@campaign)["valid"]
        =  link_to  "Manuring", {controller: :manure_management_plans, action: :new}, class: :btn
      - else
        Ah, pas possible, pas possible
    - else
      =  link_to "Manuring", {controller: :manure_management_plans, action: :new, id: @campaign.selected_manure_management_plan.id }, class: :btn

  - else
    = tool_to :manage_activities.tl, { controller: :activities, action: :index }

  = tool_to :distribute.ta, { controller: :target_distributions, action: :distribute } unless TargetDistribution.distributed?

- content_for :heading_toolbar do
  = campaign_selector(resource)

-#= cobbles do |c|
  - c.cobble :general_informations do
    = attributes_list do |l|
      - l.attribute :name
      - l.attribute :harvest_year
      - l.attribute :closed
      - l.attribute :description
  -#- c.cobble(:productions) do
  -#  = cobble_toolbar do |t|
  -#    = t.new variants: Activity.availables.reorder(:name).to_a.map { |n| [n.name, {activity_id: n.id, controller: :activity_productions, campaign_id: resource.id}] }
  -#  = cobble_list(:activity_productions)

  - c.cobble :map do
    = cell :map, params: {campaign_ids: resource.id}

- if activities.any?
  = janus do |j|
    - j.face :cobbles do
      .activities-index
        - families = activities.order(:family).collect(&:family).uniq
        - families.each do |family|
          .activity-family-group
            - if families.count > 1
              .activity-family-heading= family.l
            - activities.where(family: family).order(:name).each do |activity|
              .activity-container
                = render 'backend/activities/card', activity: activity, campaign: resource
    - j.face :list do
      .productions-list
        = production_chronologies(resource.activity_productions)
- else
  .placeholding-message
    = :no_production_found_you_can_add_it_or_copy_from_previous_records.tn
