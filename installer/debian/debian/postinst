#!/bin/sh
# postinst script for ekylibre
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	gem=gem1.9.1
	gem_bin_dir="`${gem} environment gemdir`/bin"
	PATH=$gem_bin_dir:$PATH

	# Update Rubygems if necessary
	# versions="`${gem} --version`\n1.3.6.9999"
	# version="`echo -e ${versions} | sort -t '.' -g | tail -n 1`"
	# if [ ${version} = "1.3.6.9999" ]; then
	#     ${gem} install rubygems-update --no-ri --no-rdoc
        #     update_rubygems
	# fi

	# Install conf dir
	rm -f /usr/share/ekylibre/config/database.yml
	cp -u /usr/share/ekylibre/config/database.*.yml /etc/ekylibre/
	rm -f /usr/share/ekylibre/config/database.yml
	ln -s /etc/ekylibre/database.yml /usr/share/ekylibre/config/database.yml
	
	# Install log dir
	mkdir -p /var/log/ekylibre
	touch /var/log/ekylibre/production.log
	chown www-data:www-data /var/log/ekylibre
	chmod 666 /var/log/ekylibre/production.log
	rm -fr /usr/share/ekylibre/log
	ln -s /var/log/ekylibre /usr/share/ekylibre/log

	# Install private dir
	mkdir -p /var/lib/ekylibre
	chown www-data:www-data /var/lib/ekylibre
	rm -fr /usr/share/ekylibre/private
	ln -s /var/lib/ekylibre /usr/share/ekylibre/private

	# Install user
	chmod 550 /usr/sbin/ekylibre-init-db
	chown root:postgres /usr/sbin/ekylibre-init-db
	if [ ! -e /etc/ekylibre/database.yml ]; then
	    user=ekylibre
	    dbname=${user}_production
	    password=`su - postgres -c "/usr/sbin/ekylibre-init-db ${user} ${dbname}"`

	    # Write database conf
	    cp /etc/ekylibre/database.postgresql.yml /etc/ekylibre/database.yml
	    sed -i -e "s/__username__/${user}/g" -i -e "s/__password__/${password}\n  host: 127.0.0.1/g" /etc/ekylibre/database.yml
	fi

	cd /usr/share/ekylibre

	# Install bundler
	if [ "`${gem} list -i bundler`" = "false" ]; then
	    ${gem} install bundler --no-ri --no-rdoc
	fi
	
	# Determine bundle command
	if [ "command -v bundle >/dev/null && echo 'OK' || echo 'KO'" = 'KO' ]; then
	    echo "Bundle cannot be found. Please send us a report to dev@ekylibre.org."
	    exit 0
	fi

	# Check gems
	bundle install
	
	# Migrate
	bundle exec rake db:migrate RAILS_ENV=production

	# Reset sessions
	bundle exec rake db:sessions:clear RAILS_ENV=production


	if [ -e /etc/apache2/mods-enabled/passenger.load ]; then
	    a2dismod passenger
	fi

	${gem} install rake passenger --no-ri --no-rdoc -v '~> 3.0'

	version=`passenger-config --version`
	passenger-install-apache2-module -a
	passenger-install-apache2-module --snippet > /etc/apache2/conf.d/passenger.conf

	# Update passenger
	# Previous version cannot work
	# install_passenger="1"
	# if [ "command -v passenger-config >/dev/null && echo 'OK' || echo 'KO'" = 'OK' ]; then
	#     versions="`passenger-config --version`\n2.9.999"
	#     version="`echo -e ${versions} | sort -t '.' -g | tail -n 1`"
	#     if [ $version = "2.999.999" ]; then
	# 	if [ -e /etc/apache2/mods-enabled/passenger.load ]; then
	# 	    a2dismod passenger
	# 	fi
	#     else
	# 	install_passenger="0"
	#     fi
	# fi

	# # Make sure that Rake is fully installed and usable from $PATH
	# ${gem} install rake --no-ri --no-rdoc

	# if [ $install_passenger = "1" ]; then
	#     ${gem} install passenger --no-ri --no-rdoc
	#     version=`passenger-config --version`
	#     passenger-install-apache2-module -a
	#     passenger-install-apache2-module --snippet > /etc/apache2/conf.d/passenger.conf
	# fi

	# Install apache conf
	if [ ! -e /etc/apache2/conf.d/ekylibre.conf -a -e /etc/ekylibre/apache.conf ]; then
	    ln -s /etc/ekylibre/apache.conf /etc/apache2/conf.d/ekylibre.conf
	fi

	chown -R www-data:www-data /usr/share/ekylibre
	chown -R root:root /etc/ekylibre
	ln -s /usr/share/ekylibre/public /var/www/ekylibre

	invoke-rc.d apache2 reload
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
	# Nothing
    ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
